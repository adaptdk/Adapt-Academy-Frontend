$sb-middle: #faf7ff;
$sb-inner : #90e7fe;
$sb-outer : #79e2fa;
$sb-inner-border : #baf3fe;
$sb-outer-border: #b7f3fe;

$goku-width : 10%;

$scene1-length: 5s;
$cubic: cubic-bezier(.05,1.34,.78,-0.35);

@import "mixins";
@import "animations";

@function randomNum($min, $max) {
    $rand: random();
    $randomNum: $min + floor($rand * (($max - $min) + 1));

    @return $randomNum;
}

// Energy related

.energy-stuff {
  display: block;
  position: absolute;
  background: white;
  border-radius: 50%;
  transition: transform $scene1-length $cubic, opacity $scene1-length $cubic;
}

@for $i from 0 through 100 {
  .energy-stuff-#{$i} {
      $size: #{randomNum(3, 6)}px;
      $positionX: #{randomNum(-700, 700)}px;
      $positionY: #{randomNum(-700, 700)}px;

      width: $size;
      height: $size;
      left: calc(50% - $width / 2);
      top: calc(50% - $width / 2);
      transform: translateX($positionX) translateY($positionY);
      box-shadow: 0 0 5px $size transparentize($sb-middle, 0.5);
  }
}

//goku

.goku {
  position: fixed;
  left: 40%; //20% width;
  bottom: 100px;
  width: $goku-width;
  min-width: 200px;

  img {
      max-width: 100%;
      height: auto;
      animation: float 3s ease-in-out infinite alternate;
  }

  > span {
      @include circle-center(150px);
      display: inline-block;
      top: -400px;
      
      background-image: radial-gradient($sb-middle 0%, $sb-middle 17%, $sb-inner 28%, $sb-inner 70%, $sb-outer 100%);
      border: 10px solid $sb-inner-border;
      border-radius: 100%;
      text-indent: -9999px;
      word-wrap: nowrap;
      
      animation: float 7s ease-in-out infinite alternate, 
      glow 5s ease-in-out infinite alternate;
      box-shadow: 0 0 14px 2px $sb-inner-border, 0 0 9px 10px $sb-outer-border;
  }

  &__spirit-bomb-energy {
      width: 10px;
      height: 10px;
      position: absolute;
      left: 50%;
      margin-left: -5px;
      top: -200px;
      animation: opacityChange 2s ease-in-out infinite alternate;
  }
}

// Controls

.input--play {
  display: none;

  &:checked {
    ~ .controls {
        label[for="play"] {
            &:before {
                content: "";
                position: absolute;
                left: 0;
                right: 0;
                top: 0;
                bottom: 0;
                transform: translateX(-100%);
                background: #cb0047;
                z-index: -1;
                animation: sceneProgress $scene1-length linear 1 forwards;
            }
        }
      }

      ~ .goku {
        animation: zoomGokuOut 2s ease-in-out $scene1-length 1 forwards;
  
        > span {
            animation: float 3s ease-in-out infinite alternate, 
            glow 5s ease-in-out infinite alternate, 
            grow 8s $cubic 1 forwards;
        }
    
        .energy-stuff {
            transform: translateX(0) translateY(0);
            opacity: 0;
        }
      }
  }
}

.input--reset {
  display: none;

  &:checked {
    ~ .controls {
      label[for="reset"] {
          &:before {
              content: "";
              position: absolute;
              left: 0;
              right: 0;
              top: 0;
              bottom: 0;
              background: #cb0047;
              z-index: -1;
          }
      }
    }
  }
}

.input--modal {
  display: none;

  &:checked {
    ~ .controls {
      label[for="modal"] {
          &:before {
              content: "";
              position: absolute;
              left: 0;
              right: 0;
              top: 0;
              bottom: 0;
              background: black;
              z-index: -1;
          }
      }
    }
  }
}

.controls {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 40px;
  display: flex;
  justify-content: center;
  z-index: 100;
  border-bottom: 1px solid lighten(#3a3a3a, 15%);
  background-color: #3a3a3a;

  label {
    position: relative;
    cursor: pointer;
    flex-grow: 1;
    display: block;
    height: 40px;
    color: white;
    line-height: 40px;
    text-align: center;
    cursor: pointer;
    transition: background 0.2s ease-in-out;
    overflow: hidden;

    &:before {
      content: "";
    }

    &:hover {
      background-color: transparentize(white, 0.9);
    }

    + label {
      border-left: 1px solid lighten(#3a3a3a, 15%);
    }
  }
}
